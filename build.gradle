buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:5.2.0"
    }
}

plugins {
    id 'java'
    id "com.github.johnrengelman.shadow" version "5.2.0"
}

apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'

group 'com.anderb'
version '0.0.1-SNAPSHOT'
sourceCompatibility = 11

repositories {
    mavenCentral()
}

dependencies {
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.29'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

jar {
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': 'com.anderb.server.HttpServerApplication'
        )
    }
}

shadowJar {
    archiveBaseName.set('http-server')
    archiveClassifier.set('')
    archiveVersion.set('')
}

defaultTasks 'clean', 'build'
project.tasks.build.dependsOn shadowJar

test {
    useJUnitPlatform()
}

task serve(type: Exec) {
    commandLine 'java', '-jar', 'build/libs/http-server.jar'
}
serve.mustRunAfter build
