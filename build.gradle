buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:5.2.0"
    }
}

plugins {
    id 'java'
    id "com.github.johnrengelman.shadow" version "5.2.0"
}

apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'

group 'com.anderb'
version '0.0.1-SNAPSHOT'
sourceCompatibility = 11

ext {
    artifactName = 'http-server'
    bucketName = project.findProperty('bucket')
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'org.slf4j:slf4j-log4j12:1.7.36'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

jar {
    manifest {
        attributes(
                'Class-Path': configurations.runtimeClasspath.collect { it.getName() }.join(' '),
                'Main-Class': 'com.anderb.server.HttpServerApplication'
        )
    }
}

shadowJar {
    archiveBaseName.set("${artifactName}")
    archiveClassifier.set('')
    archiveVersion.set('')
}

defaultTasks 'clean', 'build'
project.tasks.build.dependsOn shadowJar

test {
    useJUnitPlatform()
}

tasks.register('serve', Exec) {
    dependsOn build
    commandLine 'java', '-jar', "build/libs/${artifactName}.jar"
}

tasks.register('upload', Exec) {
    dependsOn build
    doFirst {
        println "Executing command: aws s3 cp build/libs/${artifactName}.jar s3://${bucketName}/${artifactName}.jar"
    }
    commandLine 'aws', 's3', 'cp', "build/libs/${artifactName}.jar", "s3://${bucketName}/${artifactName}.jar"
}